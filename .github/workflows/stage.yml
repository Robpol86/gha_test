name: Deploy to Stage

on:
  push:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2, with: {fetch-depth: 0}}
      - {name: Initialize dependencies, uses: ./.github/actions/init-deps}
      - {name: Build docs, run: make docs, env: {SPHINX_HTML_BASEURL: "https://rob86stage.robpol86.com/"}}
      - {name: Store HTML, uses: actions/upload-artifact@v2, with: {name: html, path: build/html/, if-no-files-found: error}}

  publish:
    runs-on: ubuntu-latest
    needs: build
    concurrency: "publish-${{ github.event_name }}"
    steps:
      - name: Fetch HTML files
        uses: actions/download-artifact@v2
        with: {name: html, path: html}
      - run: ls -lah

  prerelease:
    runs-on: ubuntu-latest
    needs: publish
    if: "github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, ' (#')"
    steps:
      - name: Gather data
        id: data
        run: |
          jq -r .head_commit.message < "$GITHUB_EVENT_PATH" > message.txt
          # Verify commit came from PR.
          head -1 message.txt |tee /dev/stderr |grep -Po '(?<= \(#)[0-9]+(?=\)f$) > prnum.txt
          test -s prnum.txt || echo ::set-output name=skip::true  # Malformed commit msg title.
          curl -fI "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$(cat prnum.txt)" || echo ::set-output name=skip::true
          # Get data from commit message.
          head -1 message.txt |sed 's/ (#[0-9]\+)$//' |xargs -0 printf '::set-output name=title::%s'
          tail -n+3 message.txt > body.txt
          # Determine tag name to create.
          TZ=America/Chicago git show -s --format=%cd --date=format-local:"::set-output name=tag::%Y.%m.%d-pre"
      - name: Fetch HTML files
        if: "!steps.data.skip"
        uses: actions/download-artifact@v2
        with: {name: html, path: html}
      - name: Archive HTML files
        if: "!steps.data.skip"
        run: tar -czvf html.tar.gz html/
      - name: Create "-pre" tag
        if: "!steps.data.skip"
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.data.tag }}',
              sha: context.sha
            })
      - name: Create prerelease
        if: "!steps.data.skip"
        uses: softprops/action-gh-release@v1
        with: {prerelease: true, tag_name: "${{ steps.data.tag }}", files: "html.tar.gz", name: "${{ steps.data.title }}", body_path: body.txt}
