name: Deploy to Stage

on:
  push: {branches: ["**"]}

jobs:

  build:
    name: Build HTML
    runs-on: ubuntu-latest
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2, with: {fetch-depth: 0}}
      - {name: Initialize dependencies, uses: ./.github/actions/init-deps}
      - {name: Build docs, run: make docs, env: {SPHINX_HTML_BASEURL: "https://rob86stage.robpol86.com/"}}
      - {name: Store HTML, uses: actions/upload-artifact@v2, with: {name: html, path: build/html/, if-no-files-found: error}}

  publish:
    name: Publish to NFSN
    runs-on: ubuntu-latest
    needs: build
    concurrency: "${{ github.workflow }}-${{ github.job }}"
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2}
      - {name: Fetch HTML files, uses: actions/download-artifact@v2, with: {name: html, path: build/html/}}
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          source: build/html/
          user: robpol86_rob86stage
          ssh-key: "${{ secrets.NFSN_SSH_KEY }}"
          cf-token: "${{ secrets.TOKEN_CF_PURGE_CACHE }}"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: publish
    if: "github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, ' (#')"
    steps:
      - {name: Fetch HTML files, uses: actions/download-artifact@v2, with: {name: html, path: build/html/}}
      - {name: Archive HTML files, run: tar -C build -czvf html.tar.gz html/}
      - name: Determine title and body
        id: data
        run: |
          jq -r .head_commit.message < "$GITHUB_EVENT_PATH" |head -1 > title.log
          test -s title.log || echo "*No title*" > $_
          xargs -0 printf '::set-output name=title::%s' < title.log
          jq -r .head_commit.message < "$GITHUB_EVENT_PATH" |tail -n+3 > body.log
          test -s body.log || cp title.log $_
      - name: Delete prerelease
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with: {delete_release: true, tag_name: prerelease}
        env: {GITHUB_TOKEN: "${{ github.token }}"}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ steps.data.outputs.title }}"
          body_path: body.log
          tag_name: prerelease
          prerelease: true
          target_commitish: "${{ github.ref }}"
          files: html.tar.gz
