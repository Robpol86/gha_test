name: Deploy to Stage

on:
  push:

jobs:

  build-stage:
    name: Build HTML for Stage
    runs-on: ubuntu-latest
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2, with: {fetch-depth: 0}}
      - {name: Initialize dependencies, uses: ./.github/actions/init-deps}
      - {name: Build docs, run: make docs, env: {SPHINX_HTML_BASEURL: "https://rob86stage.robpol86.com/"}}
      - {name: Store HTML, uses: actions/upload-artifact@v2, with: {name: html-stage, path: build/html/, if-no-files-found: error}}

  build-prod:
    name: Build HTML for Production
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/stage_and_prod'"  # TODO
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2, with: {fetch-depth: 0}}
      - {name: Initialize dependencies, uses: ./.github/actions/init-deps}
      - {name: Build docs, run: make docs, env: {SPHINX_HTML_BASEURL: "https://robpol86.com/"}}
      - {name: Store HTML, uses: actions/upload-artifact@v2, with: {name: html-prod, path: build/html/, if-no-files-found: error}}

  prerelease:
    name: Create Prerelease
    runs-on: ubuntu-latest
    needs: [build-stage, build-prod]
    if: "github.ref == 'refs/heads/stage_and_prod'"  # TODO
    steps:
      - {name: Fetch Stage HTML files, uses: actions/download-artifact@v2, with: {name: html-stage, path: html-stage}}
      - {name: Fetch Prod HTML files, uses: actions/download-artifact@v2, with: {name: html-prod, path: html-prod}}
      - {name: Archive Stage HTML files, run: mv html-stage html && tar -czvf html-stage.tar.gz $_ && rm -r html}
      - {name: Archive Prod HTML files, run: mv html-prod html && tar -czvf html-prod.tar.gz $_}
      - name: Get commit title and body
        id: commit
        run: |
          jq -r .head_commit.message < "$GITHUB_EVENT_PATH" |head -1 > title.txt
          test -s title.txt || echo "*No title*" > $_
          xargs -0 printf '::set-output name=title::%s' < title.txt
          jq -r .head_commit.message < "$GITHUB_EVENT_PATH" |tail -n+3 > body.txt
          test -s body.txt || cp title.txt $_
      - name: Create or update prerelease
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ steps.commit.outputs.title }}"
          body_path: body.txt
          tag_name: prerelease
          prerelease: true
          target_commitish: "${{ github.ref }}"
          files: html-*.tar.gz

  publish-stage:
    name: Publish to NFSN Stage
    runs-on: ubuntu-latest
    needs: build-stage
    concurrency: "publish-${{ github.event_name }}"
    env:
      CF_AUTH: "Authorization: Bearer secrets.TOKEN_CF_PURGE_CACHE"
      CF_URL: https://api.cloudflare.com/client/v4/zones/5efb26a03250a8bc392727af05a39aba/purge_cache
      NFSN_HOST: ssh.phx.nearlyfreespeech.net
      NFSN_USER: secrets.NFSN_SSH_USER_STAGE
    steps:
      - {name: Fetch HTML files, uses: actions/download-artifact@v2, with: {name: html-stage, path: html}}
      - name: Setup SSH
        run: echo shimataro/ssh-key-action@v2
      - {name: rsync, run: "echo rsync -rptcivh --delete-after --stats html/ ${{env.NFSN_USER}}@${{env.NFSN_HOST}}:/home/public"}
      - name: Purge Cloudflare Cache
        run: |
          echo curl -sS -X POST "${{env.CF_URL}}" -H "${{env.CF_AUTH}}" --data '{"purge_everything":true}' |
            tee /dev/stderr |
            cat
