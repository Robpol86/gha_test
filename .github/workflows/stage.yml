name: Deploy to Stage

on:
  push:

jobs:

  build:
    name: Build HTML
    runs-on: ubuntu-latest
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2, with: {fetch-depth: 0}}
      - {name: Initialize dependencies, uses: ./.github/actions/init-deps}
      - {name: Build docs, run: make docs, env: {SPHINX_HTML_BASEURL: "https://rob86stage.robpol86.com/"}}
      - {name: Store HTML, uses: actions/upload-artifact@v2, with: {name: html, path: build/html/, if-no-files-found: error}}

  publish:
    name: Publish to NFSN
    runs-on: ubuntu-latest
    needs: build
    concurrency: "publish-${{ github.event_name }}"
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2}
      - {name: Fetch HTML files, uses: actions/download-artifact@v2, with: {name: html, path: build/html/}}
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          source: build/html/
          user: robpol86_rob86stage
          ssh-key: "${{ secrets.NFSN_SSH_KEY }}"
          cf-token: "${{ secrets.TOKEN_CF_PURGE_CACHE }}"

  prerelease:
    name: Create Prerelease
    runs-on: ubuntu-latest
    needs: build
    if: "github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, ' (#')"
    steps:
      - {name: Fetch HTML files, uses: actions/download-artifact@v2, with: {name: html, path: html}}
      - {name: Archive HTML files, run: tar -czvf html.tar.gz html/}
      - name: Get commit title and body
        id: commit
        run: |
          jq -r .head_commit.message < "$GITHUB_EVENT_PATH" |head -1 > title.txt
          test -s title.txt || echo "*No title*" > $_
          xargs -0 printf '::set-output name=title::%s' < title.txt
          jq -r .head_commit.message < "$GITHUB_EVENT_PATH" |tail -n+3 > body.txt
          test -s body.txt || cp title.txt $_
      - name: Create or update prerelease
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ steps.commit.outputs.title }}"
          body_path: body.txt
          tag_name: prerelease
          prerelease: true
          target_commitish: "${{ github.ref }}"
          files: html.tar.gz
