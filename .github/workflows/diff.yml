name: Diff

on:
  pull_request:
    types:
      # Defaults
      - opened
      - synchronize
      - reopened
      # Additional
      - closed

env:
  BRANCH_NAME_HTML_OLD: __diff__html_old
  COLLAPSE_GT_LINES: 10
  DIFF_CONTEXT: 5
  GIT_IGNORE: |
    .doctrees/
    __pycache__/
  PRETTIER_GLOB: "**/*.{js,css,html,xml}"
  ROOT_DIR_DIFF: ./build/html
  TRUNCATE_TO_BYTES: 261445

jobs:

  build:
    name: Build HTML
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Initialize dependencies
        uses: Robpol86/actions-init-deps-py@v3
        with:
          no-dev: "true"
      - name: Build docs
        env:
          SPHINX_GITHUB_BRANCH: main
          SPHINX_HTML_BASEURL: "https://rob86stage.robpol86.com/"
        run: make docs
      - name: Create .gitignore
        run: printenv GIT_IGNORE |tee "$ROOT_DIR_DIFF/.gitignore"
      - name: Prettify
        run: |
          PS4="\n\033[1;33m$PS4\033[0m"
          set -euxo pipefail
          npm install -g prettier @prettier/plugin-xml
          prettier --write "$ROOT_DIR_DIFF/$PRETTIER_GLOB"
      - name: Store HTML as temporary artifact
        if: github.event.action != 'closed'
        uses: actions/upload-artifact@v3
        with:
          name: html_new
          if-no-files-found: error
          path: "${{ env.ROOT_DIR_DIFF }}"
      - name: Store HTML in orphaned branch
        if: github.event.pull_request.merged && github.event.pull_request.base.ref == 'main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          commit_message: "[skip ci]"
          enable_jekyll: true  # Don't create .nojekyll
          force_orphan: true  # Discard git history
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          publish_branch: "${{ env.BRANCH_NAME_HTML_OLD }}"
          publish_dir: "${{ env.ROOT_DIR_DIFF }}"

  diff:
    name: Diff
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Fetch old HTML
        uses: actions/checkout@v3
        with:
          ref: "${{ env.BRANCH_NAME_HTML_OLD }}"
          path: html
      - name: Prepare for new HTML
        run: git -C html rm -r . && git -C html restore --staged .
      - name: Fetch new HTML
        uses: actions/download-artifact@v3
        with:
          name: html_new
          path: html
      - name: Diff
        env:
          SUBTRACT_BYTES_PER_COUNT: 10
        run: |
          truncate () {
            cp "$1" "$1.orig"
            head --bytes="$2" "$1.orig" > "$1"
            cmp -s "$1" "$1.orig" || echo -e "\n\nTruncated" |tee -a "$1"
            rm "$1.orig"
          }
          PS4="\n\033[1;33m$PS4\033[0m"
          set -euxo pipefail
          git -C html status --porcelain --untracked-files=all |tee git_status.txt
          if [ -s git_status.txt ]; then
            git -C html diff --diff-filter=M --unified="$DIFF_CONTEXT" HEAD |tee git_diff.patch
            if [ -s git_diff.patch ]; then
              subtract="$(stat -c%s git_status.txt)"
              line_count="$(wc -l < git_status.txt)"
              truncate git_diff.patch $(( TRUNCATE_TO_BYTES - subtract - (line_count * SUBTRACT_BYTES_PER_COUNT) ))
            fi
          fi
      - name: Post
        uses: actions/github-script@v6
        env:
          CHANGED: "${{ hashFiles('git_status.txt') && 'true' }}"
          HEADING: "Diff Against [Old HTML](https://github.com/${{ github.repository }}/tree/${{ env.BRANCH_NAME_HTML_OLD }})"
        with:
          script: |
            function genBody() {
              if (!process.env.CHANGED) return `*No HTML changes detected.*`
              return `todo`
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### ` + process.env.HEADING + `\n\n` + genBody()
            })
